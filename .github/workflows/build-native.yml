name: build-native

on:
  repository_dispatch:
    types: [trigger-build]

jobs:
  build-native:
    runs-on: ubuntu-latest
    env:
      OS: linux
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.sha }}

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.2.0'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'

      - name: Set version
        run: ./mvnw versions:set -DnewVersion="${{ github.event.release.tag_name }}"

      - name: Build native executable
        run: ./mvnw package -Dnative

      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: api-gateway-${{ steps.project.outputs.version }}
          path: target/api-gateway-${{ steps.project.outputs.version }}-runner
          retention-days: 5

      - name: Trigger next workflow
        if: success() && !contains(${{ steps.project.outputs.version }}, 'SNAPSHOT')
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_GHA_PAT }}
          repository: ${{ github.repository }}
          event-type: trigger-docker
          client-payload: '{"ref": "${{ github.event.client_payload.ref }}", "sha": "${{ github.event.client_payload.sha }}", "version": "${{ steps.project.outputs.version }}", "run_id": "${{ github.run_id }}"}'